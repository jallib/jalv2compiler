<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"topic.dtd">
<topic id="d0e32" xml:lang="en-US">
  <title>Definitions</title>

  <body>
    <p>The following abbreviations are used throughout this guide:</p>

    <p><i>bit</i></p>

    <lq>A bit within a byte, 0 &lt;= bit &lt;= 7</lq>

    <p><i>Comment</i></p>

    <lq>Comments begin with either "--" or ";" and continue through the end of
    the line.</lq>

    <p><i>constant</i></p>

    <lq>A numeric constant.</lq>

    <p><i>expression</i></p>

    <p>An expression is a sequence of values and operations.Expressions are
    subdivided into:</p>

    <lq><i>cexpr </i>-- constant expression. An expression that can be fully
    evaluated at compile time. For example 1 + 2.</lq>

    <lq><i>expr</i> -- any expression. An expression is anything that
    evaluates to a value, for example: b + c, x + 1, etc.</lq>

    <lq><i>lexpr</i> -- logical expression. A logical expression. This differs
    from an expression in that the result is 0 if the expression is zero, and
    1 if the expression is anything other than 0.</lq>

    <p><i>identifier</i></p>

    <lq>Identifies a variable, constant procedure, function, label, etc. Must
    begin with a letter or '_' followed by any number of of letters (a-z),
    digits (0-9), or '_'. Note that identifiers beginning with '_' are
    reserved for the compiler.</lq>

    <p><i>program</i></p>

    <lq>A program is simply a sequence of statements. Unlike other languages,
    in JAL, if the execution runs out of statements, the processor will be put
    to sleep.</lq>

    <p><i>scope</i></p>

    <lq>Scope is the `visibility' of an identifier. Each statement_block
    creates a new scope. Anything declared within this scope will not be
    visible once the scope ends.</lq>

    <lq>A variable can be redefined in a block as follows:</lq>

    <codeblock>          VAR BYTE x, z
          ...
          IF (x) THEN
             VAR WORD x, y ; all references to x will refer
                        ; to this definition
             ...
          END IF
          ...
          VAR WORD x ; this is illegal because x already exists
</codeblock>

    <p><i>statement</i></p>

    <lq>A single assignment, definition, control (BLOCK, CASE, IF) or looping
    (FOR, FOREVER, REPEAT, WHILE).</lq>

    <p><i>statement_block</i></p>

    <lq>A sequence of statements. Variables, constants, procedures, and
    functions defined in a statement_block will not be visible outside of the
    statement_block.</lq>

    <p><i>token</i></p>

    <lq>The JAL compiler sees only a stream of tokens. An entire program can
    be written without any line breaks or extra spaces, except of course for
    comments which are terminated by and end of line.</lq>

    <p><i>var</i> â€“ variable</p>
  </body>
</topic>
