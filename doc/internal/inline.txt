Inline Assembly Information
---------------------------

It's been requested that I provide inline assembly, so here's some information
to go with it.

Inline assembly is included *verbatim*. Changes are *not* made so you're on
your own. If you don't set the bank or page correctly & fly off into the
ether, it's not my fault!

Every mnemonic in the datasheet for the 16f87x is implemented, along with '$' 
for the current program counter (the program counter at the *start* of the 
instruction).

All variables in scope can be used in ``var[+ofs]'' notation.

If the compiler detects that the bank or page bits are not set correctly, it
will issue a warning.

Ten special mnemonics are available: 

  branchlo_set, branchlo_clr : set or clear PCLATH:3
  branchhi_set, branchhi_clr : set or clear PCLATH:4
  datalo_set, datalo_clr     : set or clear STATUS:<RP0>
  datahi_set, datahi_clr     : set or clear STATUS:<RP1>
  page    label              : this is the same as branchlo_xxx, branchhi_xxx
  bank    label              : this is the same as datalo_xxx, datahi_xxx

the difference between using these and doing the operation directly is that
these will be changed if necessary. For example:

asm branchlo_set
asm branchhi_set
asm goto label

guarentees that branch bits will be set correctly for the goto. 

The pagesel and banksel mnemonics are even better in that they work correctly
even on processors without banks. For example, the 16f81x will never generate
a datahi_xxx instruction.



