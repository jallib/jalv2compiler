JALV2.1 Announcement
====================

Finally JalV2.1 has been released.  Look at README.txt for all new fixes
and enhancements (look at everything from 8 June forward). The major changes:

A new naming convention : the JALv2 version string (when loading the compiler)
is : jal 2.x.y where x is the last released version, and y the latest working
version (beta).

A new constant is available to programs : JAL_VERSION which holds the major
version * 1000 + minor version (currently 2001). Beta versions will always
have the minor version one higher (eg, jal 2.1.1 will report 2002).

Inline assembly has been completely revamped and includes all pseudo-
instructions allowed by the microchip assemblers.

The assembly file contains all CLI options passed to the compiler (to
help debugging compiler problems).

Lookup tables can now be greater than 255 bytes.

Loop construct was changed. 
  Instead of:
    while var < expr
  it now uses
    while var != expr
  which is a bit faster.    

  
New language elements:

  BLOCK
    statement(s)
  END BLOCK

  Explicitly create a block of statements. Variables defined in the block
  are local to it. This can be used anywhere a statement is used.

  =====

  CASE expr OF
    cexpr["," cexpr2...] ":" statement
    [OTHERWISE] statement
  END CASE

  Evaluate expr and execute whichever statement has a matching cexpr.
  If no statement matches, execute the OTHERWISE clause if it exists.

  =====

  PRAGMA FAST-INTERRUPT

  When defined this creates fast-interrupt code saving only W, STATUS, and
  PCLATH. Generally useful only with completely inline assembly code.

  =====

  WHEREIS(label)

  Returns the PC of label. Look for the example in README.asm.

  =====

  DEFINED(var)

  returns TRUE if var has been defined, FALSE if not.

  =====

  Inline assembly extras: DB, DW, DS

  Again, look into README.asm

